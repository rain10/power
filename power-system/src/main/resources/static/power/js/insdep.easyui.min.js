
;(function(global,undefined) {
    "use strict" 
    var $in;
    var insdep={
    	config:{},
		is:{
			json:function(t){
				return typeof t == "object" && t.constructor == Object;
			}
		},
		get:{
			fileinfo:function(f){
				var p = f.lastIndexOf("/")*1;
				var n = f.substring(p+1);
    			return {"name":n.replace(/\.\w+$/,''),"extension":n.replace(/.+\./,""),"path":f.substring(0,f.lastIndexOf('/')),"fullname":n,"fullpath":f};
			},
			locationPath:function(){
  				return (this.fileinfo(document.getElementsByName("insdep")[0].src).path)+"/";
			}
		},
		extend:function(d, s){
			for (var k in d) {
				if (s[k] === undefined) {
					s[k] = d[k];
					continue;
				}
				this.is.json(d[k])?this.extend(d[k], s[k]):"";
			}
			return s;
		},
		load:{
			
			headfile:function(c,callback){
				var d={
					type:"",
					file:""
				};
				var n=insdep.extend(d,c);
				var p=n.file;
				if(!p || p.length === 0){
					throw new Error('argument "path" is required !');
				}
			 	var h = document.getElementsByTagName('head')[0];
				switch(n.type)
				{
					case "css":
						var t = document.createElement('link');
						t.href = n.file;
						t.rel = 'stylesheet';
						t.type = 'text/css';
					break;
					case "js":
					default:
					    var t = document.createElement('script');
					    t.src = n.file;
					    t.type = 'text/javascript';

					    if (t.addEventListener) {
					        t.addEventListener('load', function () {
					            callback();
					        }, false);
					    } else if (t.attachEvent) {
					        t.attachEvent('onreadystatechange', function () {
					            var target = window.event.srcElement;
					            if (target.readyState == 'loaded') {
					                callback();
					            }
					        });
					    }
				}
				h.appendChild(t);
			},
			js:function(f,n){this.headfile({type:"js",file:f},n);},
			css:function(f,n){this.headfile({type:"css",file:f},n);}
		},
		construct:function(c){
			/*insdep.load.js(insdep.get.locationPath()+"insdep.config.js",function(){
				insdep.config=insdepConfig;
				insdep.load.js(insdep.get.locationPath()+"jquery-1.12.4.min.js",function(){

				});

			});*/
		},

		ajax:function(c){
			var d={
				url:"",
				async:true,//true异步请求,false同步请求,注：同步请求将锁住浏览器，用户其它操作必须等待请求完成才可以执行
				cache:false,
				type:"POST",
				dataType:"html",
				beforeSend:function(){},
				complete:function(){}
			};
			var n=$.extend(true,d,c);
			n.async?$.ajax(n):$.when($.insdep.ajax_async(n)).done(n.success?n.success:function(data){
	            return data;
	        });
		},
		ajax_async:function(c){
			var d = $.Deferred();
			var n=$.extend(true,c,{
				success: function(r){
					d.resolve(r);
				}
			});
			$.ajax(n);
			return d.promise();
		}
	};
    $in = (function(){ return this || (0, eval)('this'); }());
    !('insdep' in $in) && ($in.insdep = insdep);
}());